// TODO: Create a function that returns a license badge based on which license is passed in
// If there is no license, return an empty string
function renderLicenseBadge(licence) {
  if (licence === 'Apache license 2.0') {
   return '[![License](https://img.shields.io/badge/License-Apache_2.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)' 
  } 
  else if (licence === 'Boost Software License 1.0') {
    return '[![License](https://img.shields.io/badge/License-Boost_1.0-lightblue.svg)](https://www.boost.org/LICENSE_1_0.txt)' 
   } 
   else if (licence === 'GNU Affero General Public License v3.0') {
    return '[![License: AGPL v3](https://img.shields.io/badge/License-AGPL_v3-blue.svg)](https://www.gnu.org/licenses/agpl-3.0)' 
   } 
   else if (licence === 'GNU General Public License v3.0') {
    return '[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)' 
   } 
   else if (licence === 'GNU Lesser General Public License v3.0') {
    return '[![License: LGPL v3](https://img.shields.io/badge/License-LGPL_v3-blue.svg)](https://www.gnu.org/licenses/lgpl-3.0)' 
   } 
   else if (licence === 'MIT License') {
    return '[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)' 
   } 
   else if (licence === 'Mozilla Public License 2.0') {
    return '[![License: MPL 2.0](https://img.shields.io/badge/License-MPL_2.0-brightgreen.svg)](https://opensource.org/licenses/MPL-2.0)' 
   } 
   else if (licence === 'The Unlicense') {
    return '[![License: Unlicense](https://img.shields.io/badge/license-Unlicense-blue.svg)](http://unlicense.org/)' 
   } 
  else {
    return '';
  }
}

// TODO: Create a function that returns the license link
// If there is no license, return an empty string
function renderLicenseLink(licence) {
  if (licence === 'Apache license 2.0') {
    return '[Link to licence](https://opensource.org/licenses/Apache-2.0)' 
   } 
   else if (licence === 'Boost Software License 1.0') {
     return '[Link to licence](https://www.boost.org/LICENSE_1_0.txt)' 
    } 
    else if (licence === 'GNU Affero General Public License v3.0') {
     return '[Link to licence](https://www.gnu.org/licenses/agpl-3.0)' 
    } 
    else if (licence === 'GNU General Public License v3.0') {
     return '[Link to licence](https://www.gnu.org/licenses/gpl-3.0)' 
    } 
    else if (licence === 'GNU Lesser General Public License v3.0') {
     return '[Link to licence](https://www.gnu.org/licenses/lgpl-3.0)' 
    } 
    else if (licence === 'MIT License') {
      return '[Link to licence](https://opensource.org/licenses/MIT)';
    } 
    else if (licence === 'Mozilla Public License 2.0') {
     return '[Link to licence](https://opensource.org/licenses/MPL-2.0)' 
    } 
    else if (licence === 'The Unlicense') {
     return '[Link to licence](http://unlicense.org/)'
    } 
   else {
     return '';
   }
 }

// TODO: Create a function that returns the license section of README
// If there is no license, return an empty string
function renderLicenseSection(licence) {
  if (licence) {
    return `
## License

This application has the following licence:

${licence}

${renderLicenseLink(licence)}

`;
  } else {
    return '';
  }
}

// TODO: Create a function to generate markdown for README

function generateMarkdown(data) {


  let markdownTemplate = 
  `# ${data.title}

  ## Description

${data.description}

${renderLicenseBadge(data.licence)}

`;
  //Optional sections will be inserted into the Table of Contents here as and where they have been generated by the user

let tableOfContents =
`## Table of Contents`;

  if (data.licence) {
    tableOfContents +=
      `
  * [Licence](#licence)`;
};
  if (data.installation) {
    tableOfContents +=
      `
  * [Installation](#installation)`
  };
  if (data.instructions) {
    tableOfContents +=
      `
  * [Usage](#usage)`
  };
  if (data.contribution) {
    tableOfContents +=
      `
  * [Contribution](#contribution)`
  };
  if (data.testing) {
    tableOfContents +=
      `
  * [Testing](#testing)`
  };
  
  markdownTemplate += tableOfContents;

  markdownTemplate += 
  `
  `;
  
  markdownTemplate += renderLicenseSection(data.licence);

  markdownTemplate +=
    `
  * [Questions](#questions)`;

  if (data.installation) {
    markdownTemplate +=
      `

## Installation
    
  Follow the following steps to properly install this application:

  ${data.installation}`
  };

  if (data.instructions) {
    markdownTemplate +=
      `
      
## Usage

  Instructions for use:

  ${data.instructions}
  
  For more information on how to add screenshots for further instruction clarification, please visit the following website:
  
  [Mark Down Tutorial](https://agea.github.io/tutorial.md/)`
  };

  if (data.contribution) {
    markdownTemplate +=
      `
      
## Contribution

  If you would like to contribute, please adhere to these guidelines:

  ${data.contribution}`
  };

  if (data.testing) {
    markdownTemplate +=
      `
      
## Testing

  Instructions for testing application as follows:

  ${data.testing}`
  };

    markdownTemplate +=
      `
      
## Questions
      
  For further questions:

  ${data.questions}
  
  Contact Info:

  GitHub: [${data.username}](https://github.com/${data.username})

  Email: [${data.email}](mailto:${data.email})`;
  
return markdownTemplate;
}

module.exports = generateMarkdown;
